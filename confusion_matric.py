# -*- coding: utf-8 -*-
"""Confusion Matric.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1xoGjdoKw7FpC7z65rYRIT0ALsz6lx6CJ
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as  sns

df = pd.read_csv('/content/titanic.csv')
df.head()

df.shape

df.info()

sns.heatmap(df.isnull())

sns.boxplot(x='Pclass',y='Age',data=df)

def impute_age(cols):
  Age = cols[0]
  Pclass = cols[1]
  if pd.isnull(Age):
    if Pclass ==1:
      return 45
    elif Pclass == 2:
      return 30
    else:
      return 25
  else:
      return Age

df['Age'] = df[['Age','Pclass']].apply(impute_age,axis=1)

df.drop(['Name','Cabin','Ticket','PassengerId'],axis=1,inplace=True)

df.dropna(inplace=True)

sns.heatmap(df.isnull())

df.info()

object = ['Sex','Embarked']
for columns in object:
  df[columns] = df[columns].astype('category')

sex = pd.get_dummies(df['Sex'],drop_first=True,dtype=int)
embark = pd.get_dummies(df['Embarked'],drop_first=True,dtype=int)

df = pd.concat([df,sex,embark],axis=1)

df.head()

df.drop(['Sex','Embarked'],axis=1,inplace=True)

df.head()

x = df.drop(['Survived'],axis=1)

y=df['Survived']

from sklearn.model_selection import train_test_split

x_train,x_test,y_train,y_test = train_test_split(x,y,test_size=0.30,random_state=101)

from sklearn.linear_model import LogisticRegression

lr = LogisticRegression()

lr.fit(x_train,y_train)

pre = lr.predict(x_test)
print(pre)

from sklearn.metrics import confusion_matrix,precision_score,recall_score,accuracy_score

cm = confusion_matrix(y_test,pre)

print(cm)

pr = precision_score(y_test,pre)
print(pr)

recall = recall_score(y_test,pre)
print(recall)

